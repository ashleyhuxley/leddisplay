char widths[] = {2, 1, 3, 5, 5, 5, 5, 2, 3, 3, 5, 5, 2, 5, 1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 5, 3, 5, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 1, 4, 5, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 0  };

char font[][5] = {
  {0,0,0,0,0},
  {125,0,0,0,0},
  {96,0,96,0,0},
  {20,127,20,127,20},
  {18,42,127,42,36},
  {17,2,4,8,17},
  {54,73,85,34,5},
  {104,112,0,0,0},
  {28,34,65,0,0},
  {65,34,28,0,0},
  {20,8,62,8,20},
  {8,8,62,8,8},
  {5,6,0,0,0},
  {8,8,8,8,8},
  {1,0,0,0,0},
  {1,2,4,8,16},
  {62,69,73,81,62},
  {0,33,127,1,0},
  {33,67,69,73,49},
  {66,65,81,105,70},
  {12,20,36,127,4},
  {113,81,81,81,78},
  {30,41,73,73,6},
  {64,64,79,80,96},
  {54,73,73,73,54},
  {48,73,73,74,60},
  {0,0,54,54,0},
  {0,0,53,54,0},
  {0,8,20,34,65},
  {20,20,20,20,20},
  {0,65,34,20,8},
  {32,64,69,72,48},
  {38,73,77,65,62},
  {31,36,68,36,31},
  {127,73,73,73,54},
  {62,65,65,65,34},
  {127,65,65,34,28},
  {127,73,73,65,65},
  {127,72,72,72,64},
  {62,65,65,69,38},
  {127,8,8,8,127},
  {65,127,65,0,0},
  {2,1,1,1,126},
  {127,8,20,34,65},
  {127,1,1,1,1},
  {127,32,16,32,127},
  {127,32,16,8,127},
  {62,65,65,65,62},
  {127,72,72,72,48},
  {62,65,69,66,61},
  {127,72,76,74,49},
  {50,73,73,73,38},
  {64,64,127,64,64},
  {126,1,1,1,126},
  {124,2,1,2,124},
  {126,1,6,1,126},
  {99,20,8,20,99},
  {96,16,15,16,96},
  {67,69,73,81,97},
  {127,65,65,0,0},
  {16,8,4,2,1},
  {65,65,127,0,0},
  {16,32,64,32,16},
  {1,1,1,1,1},
  {64,32,16,0,0},
  {2,21,21,21,15},
  {127,5,9,9,6},
  {14,17,17,17,2},
  {6,9,9,5,127},
  {14,21,21,21,12},
  {8,63,72,64,32},
  {24,37,37,37,62},
  {127,8,16,16,15},
  {47,0,0,0,0},
  {2,1,17,94,0},
  {127,4,10,17,0},
  {65,127,1,0,0},
  {31,16,12,16,31},
  {31,8,16,16,15},
  {14,17,17,17,14},
  {31,20,20,20,8},
  {8,20,20,12,31},
  {31,8,16,16,8},
  {9,21,21,21,2},
  {16,126,17,1,2},
  {30,1,1,2,31},
  {28,2,1,2,28},
  {30,1,6,1,30},
  {17,10,4,10,17},
  {24,5,5,5,30},
  {17,19,21,25,17},
  {8,54,65,0,0},
  {0,127,0,0,0},
  {65,54,8,0,0},
  {0,0,0,0,0}
};

char msg[] = "This Is Fen";

char buffer[7][15];
int pos = -4;

// Plots a single pixel onto the buffer
void Plot(int col, int row, bool isOn)
{
  if ((col < 0) || (col > 119) || (row < 0) || (row > 6))
  {
    return;
  }

  int zone = col / 8;
  int colBitIndex = col % 8;

  char colBit = 1 << colBitIndex;
  if (isOn)
  {
    buffer[row][zone] = buffer[row][zone] | colBit;
  }
  else
  {
    buffer[row][zone] = buffer[row][zone] & (~colBit);
  }
}

// Takes the current message and renders it to the buffer
void render()
{
  int offset = 0;

  // For each character
  for (int i = 0; i < sizeof(msg) - 1; i++)
  {
    // Get index of font glyph
    int alphabetIndex = msg[i] - ' ';
    if (alphabetIndex < 0)
    {
      alphabetIndex = 0;
    }

    // For each pixel in the width
    for (int j = 0; j < widths[alphabetIndex]; j++)
    {
      // Get the byte that corresponds to the column
      int b = font[alphabetIndex][j];
      // For each row
      for (int row = 0; row < 7; row++)
      {
        // Plot the pixel on the bitmap
        int ck = round(pow(2, 6 - row));
        bool isOn = b >= ck;
        Plot(pos + offset, row, isOn);

        if (isOn) { Serial.print("X"); } else { Serial.print(" "); };

        if (isOn)
        {
          b -= ck;
        }
      }

      // Empty space between letters
      offset += 1;
      for (int erow = 0; erow < 7; erow++)
      {
        Plot(pos + offset, erow, false);
      }

      offset += 1;
      Serial.println();
    }
  }
}


void setup() {
  Serial.begin(9600);
  delay(1000);
  render();
}

void loop() {
  //Serial.println();
  delay(1000);
}
